version: '3'

# reference: https://yewton.github.io/my-marp-slides/2022-11_task/PITCHME.html

# please install Taskfile => https://taskfile.dev/ja-JP/installation/

# template => https://go-task.github.io/slim-sprig/

vars:
  PINT_BIN: ./vendor/bin/pint
  PEST_BIN: ./vendor/bin/pest
  PHPSTAN_BIN: ./vendor/bin/phpstan

tasks:
  setup:
    cmds:
      - cp .example.env .env

  # ex: task composer -- install
  composer:
    cmds:
      - docker-compose run --rm composer {{default "--version" .CLI_ARGS}}

  all-update:
    cmds:
      - for:
          - ./modules/view
          - ./modules/support
          - ./modules/session
          - ./modules/theme
          - ./modules/cache
        cmd: |
          cd {{.ITEM}} &&
          task pkg-update
      - task: pkg-update

  pkg-update:
    cmds:
      - docker-compose run --rm composer remove takemo101/chubby
      - docker-compose run --rm composer require takemo101/chubby

  start:
    cmds:
      - docker-compose up -d chubby-app

  shell:
    cmds:
      - docker-compose exec chubby-app bash

  stop:
    cmds:
      - docker-compose stop chubby-app

  ngrok-start:
    cmds:
      - docker-compose up -d ngrok

  ngrok-stop:
    cmds:
      - docker-compose stop ngrok

  pint:
    cmds:
      - docker-compose run --rm php {{.PINT_BIN}} --preset psr12 -v

  lint:
    cmds:
      - docker-compose run --rm php {{.PINT_BIN}} --test --preset psr12 -v

  analyze:
    cmds:
      - docker-compose run --rm php {{.PHPSTAN_BIN}} analyse --ansi --memory-limit=1G

  # ex: task test group=xxx
  test:
    cmds:
      - docker-compose run --rm php {{.PEST_BIN}} --colors=always
        {{if .group}}--group={{.group}}{{end}}

  # ex: task serve port=8000 root=./public/index.php
  serve:
    cmds:
      - php -S {{default "localhost" .host}}:{{default "8080" .port}} {{default "./public/index.php" .root}}
